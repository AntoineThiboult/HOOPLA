%
% This script is meant as a guideline to format inputs data according to
% HOOPLA requirements with default hydrological models, potential
% evapotranspiration and snowmelt accounting routine.

% Inputs:
%
%   Catchment ID
%   Time step of the computations
%   Meteorological series
%   Streamflow series
%
% Output:
%
%   Catchment data file suitable for use in HOOPLA

% Reference:
%
%   Valéry, A., 2010.
%         Modélisation précipitations - débit sous influence nivale.
%         Elaboration d'un module neige et évaluation sur 380 bassins versants.
%         Thèse de Doctorat, Cemagref (Antony), AgroParisTech (Paris), 405 pp.

% Programmed by C. Poncelet (2018)


%% Define framework [edit this section]

load('path/to/the/directory/that/contains/your/data/myDataFile.mat',...
    'Q','Pt','Date','T')

% Catchment
CatchID = 'baskatong';  % catchment identifier

% Time step of the computations
TimeStep = '24h';

% Path to HOOPLA location
HOOPLAdir = '';   % path to the HOOPLA directory location

% Choose wich variables to save (depending on CemaNeige use and PET formula)
VarNames = {'Date','Pt','E'}; % default are the mandatory variables, add the variable you need among {'Date' 'Pt' 'PET' 'Q' 'Lat' 'T' 'Beta' 'gradT' 'QNBV' 'Tmax' 'Tmin' 'Vmin' 'Zz5'}

%% Import catchment data [edit this section]

% Mandatory data for hydrological modeling
Pt = [];                    % total precipitation series (user-imported)
E = [];                   % potential evapotranspiration series  (user-imported, can be left empty if all variables to compute PET are provided)
Date = [];                  % can be set to [] providing that the user sets the start and end dates of his/her data
% Date must have the same length as Pt
% and PET
if isempty(Date) == 1
    DateStart = '';         % format 'yyyy/mm/dd/HH:HH:HH'
    DateEnd = '';           % format 'yyyy/mm/dd/HH:HH:HH'
end

% Optional data for hydrological modeling
Q = [];                     % observed streamflow (user-imported, can be left emtpy if no calibration or data assimilation is to be performed)

% Optional data - PET formula (exemple of Oudin)
T = [];                     % temperature series (user-imported, same as CemaNeige)
Lat = [];                   % latitude of the catchment (projection system wgs84)

% Optional data - CemaNeige (import from the user dataset)
T = [];                     % temperature series (user-imported, if not imported for Oudin formula, can be left empty)
Beta = [];                  % precipitation gradient, if left empty, default values will be provided
Vmin = [];                  % Percentage of Kf that corresponds to the minimal melting rate, will be set to a default value if left empty
Zz5 = [];                   % hypsometric curve: double values of five quantiles (q0, q0.25, q0.5, q0.75,q1)
gradT = [];                 % temperature gradient, will be set to a default value if left empty
QNBV = [];                  % mean annual precipitation, will be set to a default value if left empty

% Optional data for CemaNeige
Tmin = [];                 % minimum temperature can be set to []
Tmax = [];                 % maximum temperature can be set to []


%% Provide default values for values not set by user - no need to edit

% Date
if isempty(Date) == 1
    
    Incr = strsplit(TimeStep,'h');
    Incr = str2double(Incr{1});
    Incr = Incr/24;
    
    numDateStart = datenum(DateStart);
    numDateEnd = datenum(DateEnd);
    numDate = numDateStart:Incr:numDateEnd;
    Date = datevec(numDate);
end


% QNBV (CemaNeige)
if isempty(QNBV) == 1 && ismember('QNBV',VarNames)==1
    FracSolidP = nan(size(T,1),1);
    for t = 1:size(T,1)
        if T(t) > 3
            FracSolidP(t,1) = 0;
        elseif T(t) < -1
            FracSolidP(t,1) = 1;
        else
            FracSolidP(t,1) = 1-((T(t)-(-1))/(3-(-1)));
        end
    end
    SolidP = Pt .* FracSolidP;
    [~, ~, n1] = unique(Date(:,1),'rows');
    AnnualSolidP = accumarray( n1, SolidP, [], @sum);
    QNBV = mean(AnnualSolidP);
end

% Vmin (CemaNeige) -  default for Quebec (Valery, 2010)
if isempty(Vmin) == 1 && ismember('Vmin',VarNames)==1
    Vmin = 0.1;
end

% Beta (CemaNeige) - default for Quebec (Valery, 2010)
if isempty(Beta) == 1 && ismember('Beta',VarNames)==1
    Beta = 0;
end

% gradT (CemaNeige) - values for Quebec and France (commented)
% (See Valery (2010) p120 for default values for
% Switzerlandand and Sweden)
if isempty(gradT) == 1 && ismember('gradT',VarNames)==1
    % Values for Quebec
    gradT = [-0.3760; -0.3740; -0.3710; -0.3680; -0.3660; -0.3630; -0.3610; -0.3580; -0.3550;...
        -0.3530; -0.3500; -0.3480; -0.3450; -0.3430; -0.3400; -0.3370; -0.3350; -0.3320; -0.3290;...
        -0.3270; -0.3240; -0.3210; -0.3190; -0.3160; -0.3130; -0.3110; -0.3080; -0.3050; -0.3030;...
        -0.3000; -0.2970; -0.2950; -0.2920; -0.2890; -0.2870; -0.2840; -0.2810; -0.2790; -0.2760;...
        -0.2730; -0.2710; -0.2680; -0.2650; -0.2630; -0.2600; -0.2620; -0.2640; -0.2660; -0.2680;...
        -0.2700; -0.2720; -0.2740; -0.2770; -0.2790; -0.2810; -0.2830; -0.2850; -0.2870; -0.2890;...
        -0.2910; -0.2930; -0.2950; -0.2970; -0.2990; -0.3010; -0.3030; -0.3060; -0.3080; -0.3100;...
        -0.3120; -0.3140; -0.3160; -0.3180; -0.3200; -0.3230; -0.3260; -0.3300; -0.3330; -0.3360;...
        -0.3390; -0.3430; -0.3460; -0.3490; -0.3520; -0.3550; -0.3590; -0.3620; -0.3650; -0.3680;...
        -0.3720; -0.3750; -0.3780; -0.3810; -0.3850; -0.3880; -0.3910; -0.3940; -0.3970; -0.4010;...
        -0.4040; -0.4070; -0.4100; -0.4140; -0.4170; -0.4200; -0.4200; -0.4210; -0.4210; -0.4210;...
        -0.4220; -0.4220; -0.4220; -0.4230; -0.4230; -0.4230; -0.4240; -0.4240; -0.4240; -0.4250;...
        -0.4250; -0.4250; -0.4260; -0.4260; -0.4260; -0.4270; -0.4270; -0.4270; -0.4280; -0.4280;...
        -0.4280; -0.4290; -0.4290; -0.4290; -0.4300; -0.4300; -0.4280; -0.4250; -0.4230; -0.4210;...
        -0.4190; -0.4160; -0.4140; -0.4120; -0.4100; -0.4070; -0.4050; -0.4030; -0.4010; -0.3980;...
        -0.3960; -0.3940; -0.3920; -0.3890; -0.3870; -0.3850; -0.3830; -0.3800; -0.3780; -0.3760;...
        -0.3740; -0.3710; -0.3690; -0.3670; -0.3650; -0.3620; -0.3600; -0.3620; -0.3650; -0.3670;...
        -0.3690; -0.3720; -0.3740; -0.3760; -0.3790; -0.3810; -0.3830; -0.3860; -0.3880; -0.3900;...
        -0.3930; -0.3950; -0.3970; -0.4000; -0.4020; -0.4040; -0.4070; -0.4090; -0.4110; -0.4140;...
        -0.4160; -0.4180; -0.4210; -0.4230; -0.4250; -0.4280; -0.4300; -0.4310; -0.4310; -0.4320;...
        -0.4330; -0.4330; -0.4340; -0.4350; -0.4350; -0.4360; -0.4360; -0.4370; -0.4380; -0.4380;...
        -0.4390; -0.4400; -0.4400; -0.4410; -0.4420; -0.4420; -0.4430; -0.4440; -0.4440; -0.4450;...
        -0.4450; -0.4460; -0.4470; -0.4470; -0.4480; -0.4490; -0.4490; -0.4500; -0.4480; -0.4470;...
        -0.4450; -0.4440; -0.4420; -0.4400; -0.4390; -0.4370; -0.4350; -0.4340; -0.4320; -0.4310;...
        -0.4290; -0.4270; -0.4260; -0.4240; -0.4230; -0.4210; -0.4190; -0.4180; -0.4160; -0.4150;...
        -0.4130; -0.4110; -0.4100; -0.4080; -0.4060; -0.4050; -0.4030; -0.4020; -0.4000; -0.4030;...
        -0.4050; -0.4080; -0.4110; -0.4130; -0.4160; -0.4190; -0.4210; -0.4240; -0.4270; -0.4290;...
        -0.4320; -0.4350; -0.4370; -0.4400; -0.4430; -0.4450; -0.4480; -0.4510; -0.4530; -0.4560;...
        -0.4590; -0.4610; -0.4640; -0.4670; -0.4690; -0.4720; -0.4750; -0.4770; -0.4800; -0.4820;...
        -0.4830; -0.4850; -0.4860; -0.4880; -0.4900; -0.4910; -0.4930; -0.4950; -0.4960; -0.4980;...
        -0.4990; -0.5010; -0.5030; -0.5040; -0.5060; -0.5070; -0.5090; -0.5110; -0.5120; -0.5140;...
        -0.5150; -0.5170; -0.5190; -0.5200; -0.5220; -0.5240; -0.5250; -0.5270; -0.5280; -0.5300;...
        -0.5260; -0.5230; -0.5190; -0.5150; -0.5120; -0.5080; -0.5040; -0.5010; -0.4970; -0.4930;...
        -0.4900; -0.4860; -0.4820; -0.4790; -0.4750; -0.4710; -0.4680; -0.4640; -0.4600; -0.4570;...
        -0.4530; -0.4490; -0.4460; -0.4420; -0.4380; -0.4350; -0.4310; -0.4270; -0.4240; -0.4200;...
        -0.4170; -0.4150; -0.4120; -0.4100; -0.4070; -0.4050; -0.4020; -0.3990; -0.3970; -0.3940;...
        -0.3920; -0.3890; -0.3860; -0.3840; -0.3810; -0.3790];
    % Values for France
    %     gradT = [0.434; 0.434; 0.435; 0.436; 0.437; 0.439; 0.44; 0.441; 0.442;...
    %         0.444; 0.445; 0.446; 0.448; 0.45; 0.451; 0.453; 0.455; 0.456; 0.458;...
    %         0.46; 0.462; 0.464; 0.466; 0.468; 0.47; 0.472; 0.474; 0.476; 0.478;...
    %         0.48; 0.483; 0.485; 0.487; 0.489; 0.492; 0.494; 0.496; 0.498; 0.501;...
    %         0.503; 0.505; 0.508; 0.51; 0.512; 0.515; 0.517; 0.519; 0.522; 0.524;...
    %         0.526; 0.528; 0.53; 0.533; 0.535; 0.537; 0.539; 0.541; 0.543; 0.545;...
    %         0.547; 0.549; 0.551; 0.553; 0.555; 0.557; 0.559; 0.56; 0.562;...
    %         0.564; 0.566; 0.567; 0.569; 0.57; 0.572; 0.573; 0.575; 0.576; 0.577;...
    %         0.579; 0.58; 0.581; 0.582; 0.583; 0.584; 0.585; 0.586; 0.587; 0.588;...
    %         0.589; 0.59; 0.591; 0.591; 0.592; 0.593; 0.593; 0.594; 0.595; 0.595;...
    %         0.596; 0.596; 0.597; 0.597; 0.597; 0.598; 0.598; 0.598; 0.599; 0.599;...
    %         0.599; 0.599; 0.6; 0.6; 0.6; 0.6; 0.6; 0.601; 0.601; 0.601; 0.601;...
    %         0.601; 0.601; 0.601; 0.601; 0.601; 0.601; 0.601; 0.601; 0.601; 0.601;...
    %         0.602; 0.602; 0.602; 0.602; 0.602; 0.602; 0.602; 0.602; 0.602; 0.602;...
    %         0.602; 0.602; 0.602; 0.602; 0.602; 0.602; 0.602; 0.602; 0.602; 0.602;...
    %         0.602; 0.602; 0.602; 0.602; 0.602; 0.602; 0.602; 0.602; 0.602; 0.602;...
    %         0.602; 0.602; 0.602; 0.602; 0.602; 0.602; 0.602; 0.602; 0.602; 0.602;...
    %         0.602; 0.602; 0.602; 0.602; 0.602; 0.602; 0.602; 0.601; 0.601; 0.601;...
    %         0.601; 0.601; 0.601; 0.6; 0.6; 0.6; 0.6; 0.599; 0.599; 0.599; 0.598;...
    %         0.598; 0.598; 0.597; 0.597; 0.597; 0.596; 0.596; 0.595; 0.595; 0.594;...
    %         0.594; 0.593; 0.593; 0.592; 0.592; 0.591; 0.59; 0.59; 0.589; 0.588;...
    %         0.588; 0.587; 0.586; 0.586; 0.585; 0.584; 0.583; 0.583; 0.582; 0.581;...
    %         0.58; 0.579; 0.578; 0.578; 0.577; 0.576; 0.575; 0.574; 0.573; 0.572;...
    %         0.571; 0.57; 0.569; 0.569; 0.568; 0.567; 0.566; 0.565; 0.564; 0.563;...
    %         0.562; 0.561; 0.56; 0.558; 0.557; 0.556; 0.555; 0.554; 0.553; 0.552;...
    %         0.551; 0.55; 0.549; 0.548; 0.546; 0.545; 0.544; 0.543; 0.542; 0.541;...
    %         0.54; 0.538; 0.537; 0.536; 0.535; 0.533; 0.532; 0.531; 0.53; 0.528;...
    %         0.527; 0.526; 0.525; 0.523; 0.522; 0.521; 0.519; 0.518; 0.517; 0.515;...
    %         0.514; 0.512; 0.511; 0.51; 0.508; 0.507; 0.505; 0.504; 0.502; 0.501;...
    %         0.499; 0.498; 0.496; 0.495; 0.493; 0.492; 0.49; 0.489; 0.487; 0.485;...
    %         0.484; 0.482; 0.481; 0.479; 0.478; 0.476; 0.475; 0.473; 0.471; 0.47;...
    %         0.468; 0.467; 0.465; 0.464; 0.462; 0.461; 0.459; 0.458; 0.456; 0.455;...
    %         0.454; 0.452; 0.451; 0.45; 0.448; 0.447; 0.446; 0.445; 0.443; 0.442;...
    %         0.441; 0.44; 0.439; 0.438; 0.437; 0.436; 0.435; 0.434; 0.434; 0.433;...
    %         0.432; 0.431; 0.431; 0.43; 0.43; 0.429; 0.429; 0.429; 0.428; 0.428;...
    %         0.428; 0.428; 0.428; 0.428; 0.428; 0.428; 0.429; 0.429; 0.429; 0.43;...
    %         0.43; 0.431; 0.431; 0.432; 0.433];
end

%% Export result
if exist(sprintf('%s/Data/%s/Hydromet_obs/',HOOPLAdir,TimeStep),'dir')~=7
    mkdir(sprintf('%s/Data/%s/Hydromet_obs/',HOOPLAdir,TimeStep))
end
OutFile = sprintf('%s/Data/%s/Hydromet_obs/Hydromet_obs_%s.mat',HOOPLAdir,TimeStep,CatchID);
save(OutFile,VarNames{:})

